import string

#Cooking MC's like a pound of bacon

eng_freq = {'!': 0.0009319423636721036, ' ': 0.16920392543521318, '#': 2.349434530265807e-06, '"': 0.0006233832953638608, '%': 2.349434530265807e-06, '$': 4.698869060531614e-06, "'": 0.0001793401691436233, ')': 0.00011982116104355617, '(': 0.00011590543682644648, '*': 0.00013626720275541681, '-': 0.0018701498860915825, ',': 0.013268823082097857, '/': 5.795271841322324e-05, '.': 0.008400011590543682, '1': 0.00018952105210810844, '0': 5.6386428726379375e-05, '3': 5.0121269979003885e-05, '2': 5.3253849352691626e-05, '5': 4.542240091847227e-05, '4': 4.4639256075050335e-05, '7': 3.28920834237213e-05, '6': 2.9759504050033558e-05, '9': 3.210893858029936e-05, '8': 3.9157242171096786e-05, ';': 0.0021160573669260704, ':': 0.0003751263799991072, '?': 0.0006923000415849912, 'A': 0.0013219484956962274, '@': 4.698869060531614e-06, 'C': 0.0008168200716890789, 'B': 0.0011739341202894817, 'E': 0.0011708015409157939, 'D': 0.0007690482362403409, 'G': 0.0005395867971177137, 'F': 0.0004362116777860182, 'I': 0.0052533356096743445, 'H': 0.0010462815108117061, 'K': 0.00017385815523966974, 'J': 0.0003273545445503691, 'M': 0.001765208477073043, 'L': 0.0008473627205825344, 'O': 0.0005106104379111021, 'N': 0.0004894655271387099, 'Q': 6.813360137770841e-05, 'P': 0.0005098272930676802, 'S': 0.00095073783991423, 'R': 0.0003923555665543898, 'U': 0.00019578621085548394, 'T': 0.0016524356196202844, 'W': 0.0009476052605405423, 'V': 9.86762502711639e-05, 'Y': 0.0005419362316479796, 'X': 7.831448434219357e-06, '[': 1.0180882964485165e-05, 'Z': 4.698869060531614e-06, ']': 6.265158747375486e-06, '_': 0.0006374799025454557, 'a': 0.06073523204190138, 'c': 0.01978772075874205, 'b': 0.011462107928323452, 'e': 0.10270553049056975, 'd': 0.03461030321018903, 'g': 0.014623663661217806, 'f': 0.01796612585294263, 'i': 0.051285023216328884, 'h': 0.04766376146034585, 'k': 0.004828087959696234, 'j': 0.001011039992857719, 'm': 0.020314777238365014, 'l': 0.030494093913163333, 'o': 0.05907496497384688, 'n': 0.05522659121327149, 'q': 0.0008575436035470197, 'p': 0.012625078020805026, 's': 0.047834487036211834, 'r': 0.047301165397841495, 'u': 0.023216328883243285, 't': 0.06940151287920852, 'w': 0.017192378747641755, 'v': 0.008230852304364544, 'y': 0.017885461934070167, 'x': 0.00133917768225151, 'z': 0.0009828467784945294}

def score_freq(s):
	score = 0
	for c in s:
		if c in string.printable :
			if c in eng_freq:
				score = score + eng_freq[c]
		else:
			return 0
	return score

def bruteforce_singlexor(s):
	bestScore = 0
	bestDecoded = ''
	bestKey = 0
	for i in range(0,256): #extended ascii range
	    decoded = ''.join(chr(ord(c)^i) for c in s)
	    score = score_freq(decoded)
	    if (score > bestScore):
	        bestScore = score
	        bestDecoded = decoded
	        bestKey = i
	# print bestDecoded, bestKey, bestScore
	return (bestKey, bestDecoded)

if __name__ == '__main__':
	hexEncoded = '1b37373331363f78151b7f2b783431333d78397828372d363c78373e783a393b3736'
	hexDecoded  = hexEncoded.decode('hex')
	print bruteforce_singlexor(hexDecoded)